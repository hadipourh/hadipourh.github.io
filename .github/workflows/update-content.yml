name: Update Website Content

on:
  schedule:
    # Run every 6 days at 6:00 AM UTC
    - cron: '0 6 */6 * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [main]
    paths: ['scripts/**']

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for better handling of conflicts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update publications from DBLP
        run: node scripts/update-publications.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update talks from GitHub
        run: node scripts/update-talks.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update projects from GitHub
        run: node scripts/update-projects.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto-update: publications, talks, and projects $(date +'%Y-%m-%d %H:%M:%S')"
          
          # Configure remote URL with token for authentication
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          
          # Pull any new changes with rebase to avoid merge commits
          git pull --rebase
          
          # Push changes
          git push

      - name: Build and deploy to GitHub Pages
        if: steps.check-changes.outputs.changes == 'true'
        uses: withastro/action@v4
        # This action automatically builds and deploys to GitHub Pages
