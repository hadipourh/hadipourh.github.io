---
import Layout from '../layouts/Layout.astro'
import { profile } from '@/settings'
import { publications } from '@/data/cv'
import Hero from '@/components/ui/Hero.astro'
import Grid from '@/components/ui/Grid.astro'
import ArticleList from '@/components/ui/ArticleList.astro'
import SecurityInfo from '@/components/ui/SecurityInfo.astro'

const { fullName, title, institute, research_areas } = profile

// Use the uploaded professional profile picture
const profilePicture = '/images/profilepic1.png'
---

<Layout>
	<div data-page="home">
	<!-- Hero Section -->
	<section class='flex items-center gap-12 border-b pb-12'>
		<Hero
			fullName={fullName}
			title={title}
			institute={institute}
			profilePicture={profilePicture}
		/>
	</section>

	<!-- Interactive Terminal Section -->
	<section class='py-12 border-b'>
		<div class='w-full max-w-6xl mx-auto'>
			<h2 class='text-3xl font-bold mb-8'>Quick Message Terminal</h2>
			<p class='text-lg text-gray-600 mb-6'>
				Send me a direct message through this terminal interface! Messages are delivered directly to my Telegram.
			</p>
			
			<div class='w-full'>
				<div class='bg-black border-2 border-green-400 rounded-lg p-6 font-mono text-sm shadow-2xl shadow-green-400/20'>
					<!-- Terminal Header -->
					<div class='flex items-center justify-between mb-4 border-b border-green-400 pb-2'>
						<div class='flex items-center space-x-2'>
							<div class='w-3 h-3 bg-red-500 rounded-full'></div>
							<div class='w-3 h-3 bg-yellow-500 rounded-full'></div>
							<div class='w-3 h-3 bg-green-500 rounded-full'></div>
						</div>
						<span class='text-green-400 text-xs'>secure@crypt0grapher:~$</span>
					</div>

					<!-- Terminal Output - Full Width -->
					<div id='home-terminal-output' class='bg-black text-green-400 p-4 rounded border border-green-400 h-72 overflow-y-auto mb-4 font-mono'>
						<!-- Messages will appear here with typing effect -->
					</div>

					<!-- Terminal Input -->
					<div class='flex items-center space-x-2'>
						<span class='text-green-400'>root@secure:~#</span>
						<input
							id='home-terminal-input'
							type='text'
							placeholder='Enter your message here...'
							class='flex-1 bg-transparent border-none outline-none text-green-400 font-mono placeholder-green-600'
						/>
						<button 
							id='home-terminal-send'
							class='px-4 py-2 bg-green-900 hover:bg-green-700 text-green-400 border border-green-400 rounded transition-colors font-mono text-xs'>
							[SEND]
						</button>
						<button 
							id='home-terminal-clear'
							class='px-4 py-2 bg-red-900 hover:bg-red-700 text-red-400 border border-red-400 rounded transition-colors font-mono text-xs'>
							[CLEAR]
						</button>
					</div>

					<!-- Security Notice -->
					<div class='mt-4 text-xs text-amber-500 border-t border-amber-400 pt-2'>
						<span class='animate-pulse'>●</span> HTTPS protects browser-to-website connection
						<span class='animate-pulse'>●</span> n8n automation service can read message content
						<span class='animate-pulse'>●</span> Not end to end encrypted (intermediaries can access)
					</div>
				</div>
			</div>
			
			<!-- Import Security Info Component -->
			<div class="mt-6">
				<SecurityInfo />
			</div>
		</div>
	</section>

	<!-- Research Areas -->
	<section class='py-12 border-b'>
		<Grid gridTitle='Research Areas' gridItems={research_areas} />
	</section>

	<!-- Recent Publications -->
	<section class='py-12 border-t'>
		<ArticleList listTitle='Recent Publications' listItems={publications} />
	</section>
	</div>
</Layout>

<script>
import { initTerminal } from '../lib/terminal.js';

// Configure home page terminal
initTerminal({
  pageSelector: '[data-page="home"]',
  outputId: 'home-terminal-output',
  inputId: 'home-terminal-input',
  sendBtnId: 'home-terminal-send',
  clearBtnId: 'home-terminal-clear',
  source: 'home_terminal',
  storageKey: 'lastHomeMessageSent',
  welcomeMessages: [
    { text: 'Quick Message Terminal - Security Analysis', className: 'text-green-400', withTyping: true, delay: 20 },
    { text: '======================================', className: 'text-green-400', withTyping: true, delay: 8 },
    { text: '', className: '', withTyping: false },
    { text: 'Security breakdown of this messaging system:', className: 'text-cyan-400', withTyping: true, delay: 15 },
    { text: '1. HTTPS protects messages in transit from browser to website', className: 'text-gray-400', withTyping: true, delay: 12 },
    { text: '2. Messages sent to n8n over HTTPS but accessible within the n8n service', className: 'text-yellow-400', withTyping: true, delay: 12 },
    { text: '3. Messages are then forwarded directly to my Telegram via Telegram\'s API', className: 'text-green-400', withTyping: true, delay: 12 },
    { text: '4. Command and message history saved locally in your browser', className: 'text-gray-400', withTyping: true, delay: 12 },
    { text: '', className: '', withTyping: false },
    { text: 'This demonstrates the need for end-to-end encryption', className: 'text-amber-400', withTyping: true, delay: 15 },
    { text: 'Type your message and press Enter... trust issues? a cryptographer would understand ;)', className: 'text-yellow-400', withTyping: true, delay: 20 },
    { text: '', className: '', withTyping: false },
    { text: 'Type /help to see available commands', className: 'text-blue-400', withTyping: true, delay: 12 },
    { text: '', className: '', withTyping: false }
  ]
});
</script>
