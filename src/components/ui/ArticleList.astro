---
interface Props {
  listTitle: string;
  listItems: {
    title: string;
    authors: string;
    journal: string;
    time: string;
    link?: string;
    abstract?: string;
  }[];
}
const {listTitle, listItems} = Astro.props

import { getTextColorClass } from '../../lib/utils';

// Take only the first few publications for the home page
const displayItems = listItems ? listItems.slice(0, 3) : []

// Use uniform gradient color for all cards (emerald to blue)
const cardGradient = 'from-emerald-600 to-blue-600'
---

<div class="mb-12">
	<h2 class={`text-3xl md:text-4xl font-bold mb-8 ${getTextColorClass(0)}`}>{listTitle}</h2>
	<div class='space-y-6'>
		{
			displayItems.map((item, index) => (
				<div class={`group relative overflow-hidden rounded-2xl bg-gradient-to-br ${cardGradient} p-1 transition-all duration-300 hover:scale-[1.02] hover:shadow-2xl hover:shadow-emerald-500/25`}>
					<div class="h-full rounded-xl bg-base-100 p-6 transition-all duration-300 group-hover:bg-opacity-95">
						<h3 class="text-xl font-bold mb-3 text-base-content">{item.title}</h3>
						<p class='text-sm text-base-content/70 mb-2 font-medium'>{item.authors}</p>
						<p class='font-medium text-base-content/90 mb-3'>
							{item.journal} â€¢ {item.time}
						</p>
						{item.abstract && (
							<p class='text-sm text-base-content/70 mb-4 leading-relaxed'>{item.abstract}</p>
						)}
                        {item.link && (
                            <a href={item.link} target="_blank" rel="noopener noreferrer" class={`inline-flex items-center space-x-2 ${getTextColorClass(index + 1)} hover:scale-105 transition-transform duration-300 font-semibold`}>
								<span>View Publication</span>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
								</svg>
							</a>
						)}
						
						<!-- Subtle glow effect on hover -->
						<div class={`absolute inset-0 rounded-2xl bg-gradient-to-br ${cardGradient} opacity-0 group-hover:opacity-20 transition-opacity duration-300 pointer-events-none`}></div>
					</div>
				</div>
			))
		}
	</div>
	
	<!-- View All Publications Button -->
	<div class="text-center mt-8">
		<a href="/papers" class="group relative inline-flex items-center justify-center space-x-2 px-6 py-2.5 overflow-hidden rounded-lg bg-gradient-to-br from-emerald-600 to-blue-600 transition-all duration-300 hover:scale-105 hover:shadow-xl">
			<span class="text-white font-semibold text-sm">View All Publications</span>
			<svg class="w-4 h-4 text-white group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
			</svg>
		</a>
	</div>
</div>
