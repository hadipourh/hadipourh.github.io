---
import {template} from  '../../settings.ts'
---

<label class="grid cursor-pointer place-items-center" transition:persist>
  <input
    type="checkbox"
    id="theme-toggle"
    name="theme-toggle"
  class="toggle toggle-lg col-span-2 col-start-1 row-start-1 relative z-0 transition-all duration-200"
    data-toggle-theme={`${template.darkTheme},${template.lightTheme}`}
    aria-label="Toggle color theme"
  />
  <svg
  class="stroke-base-100 fill-base-100 col-start-1 row-start-1 relative z-10 pointer-events-none"
    xmlns="http://www.w3.org/2000/svg"
    width="14"
    height="14"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round">
    <circle cx="12" cy="12" r="5" />
    <path
      d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4" />
  </svg>
  <svg
  class="stroke-base-100 fill-base-100 col-start-2 row-start-1 relative z-10 pointer-events-none"
    xmlns="http://www.w3.org/2000/svg"
    width="14"
    height="14"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</label>

<script is:inline>
  // Ensure the visual state of the toggle matches the active theme (dark = checked)
  const darkTheme = "${template.darkTheme}";
  const getTheme = () =>
    document.documentElement.getAttribute('data-theme') ||
    localStorage.getItem('theme') ||
    'dark';
  const syncToggle = () => {
    const el = document.getElementById('theme-toggle');
    if (!(el instanceof HTMLInputElement)) return;
  // Set once to avoid fighting CSS transition (checked = dark)
  el.checked = getTheme() === darkTheme;
  };

  // Sync at startup
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', syncToggle);
  } else {
    syncToggle();
  }

  // Re-sync once after view transitions
  document.addEventListener('astro:after-swap', () => {
    // Delay to allow theme-change to update data-theme first
    setTimeout(syncToggle, 0);
  });
</script>
