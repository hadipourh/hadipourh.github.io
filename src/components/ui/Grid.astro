---
interface Props {
  gridTitle: string;
  gridItems: {
    title: string;
    description: string;
  }[];
}

const {gridTitle, gridItems} = Astro.props;

// Function to get a gradient class based on index
const getGradientClass = (index: number) => {
  const gradients = [
    'from-blue-600 to-purple-600',
    'from-purple-600 to-pink-600',
    'from-pink-600 to-red-600',
    'from-red-600 to-orange-600',
    'from-orange-600 to-yellow-600',
    'from-yellow-600 to-green-600',
    'from-green-600 to-teal-600',
    'from-teal-600 to-cyan-600',
    'from-cyan-600 to-blue-600'
  ]
  return gradients[index % gradients.length]
}

// Function to get a text gradient class based on index
const getTextGradientClass = (index: number) => {
  const gradients = [
    'from-primary via-secondary to-accent',
    'from-success via-info to-warning',
    'from-error via-primary to-success',
    'from-accent via-warning to-error',
    'from-info via-accent to-primary',
    'from-warning via-success to-info',
    'from-secondary via-accent to-primary',
    'from-info via-warning to-success',
    'from-primary via-error to-accent'
  ]
  return gradients[index % gradients.length]
}
---
<h2 class={`text-3xl md:text-4xl font-bold mb-8 bg-gradient-to-r ${getTextGradientClass(0)} bg-clip-text text-transparent`}>{gridTitle}</h2>
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  {gridItems.map((item, index) => (
    <div class={`group relative overflow-hidden rounded-2xl bg-gradient-to-br ${getGradientClass(index)} p-1 transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-${getGradientClass(index).split(' ')[0].replace('from-', '').replace('-600', '')}-500/25`}>
      <div class="h-full rounded-xl bg-base-100 p-6 transition-all duration-300 group-hover:bg-opacity-95">
        <h3 class={`text-xl font-bold mb-3 bg-gradient-to-r ${getTextGradientClass(index + 1)} bg-clip-text text-transparent transition-all duration-300`}>{item.title}</h3>
        <p class="text-base-content/80 leading-relaxed">{item.description}</p>
        
        <!-- Subtle glow effect on hover -->
        <div class={`absolute inset-0 rounded-2xl bg-gradient-to-br ${getGradientClass(index)} opacity-0 group-hover:opacity-20 transition-opacity duration-300 pointer-events-none`}></div>
      </div>
    </div>
  ))}
</div>
