---
interface Props {
  gridTitle: string;
  gridItems: {
    title: string;
    description: string;
  }[];
}

const {gridTitle, gridItems} = Astro.props;

// Gradient pairs and matching hover/border tints to match Contact page cards
const headerPairs = ['from-primary to-secondary', 'from-secondary to-accent', 'from-accent to-primary']
const hoverTints = ['hover:from-primary/10 hover:to-secondary/10', 'hover:from-secondary/10 hover:to-accent/10', 'hover:from-accent/10 hover:to-primary/10']
const borderTints = ['border-primary/20 hover:border-primary/40', 'border-secondary/20 hover:border-secondary/40', 'border-accent/20 hover:border-accent/40']
---
<h2 class={`text-3xl md:text-4xl font-bold mb-8 bg-gradient-to-r from-secondary via-accent to-primary bg-clip-text text-transparent`}>{gridTitle}</h2>
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  {gridItems.map((item, index) => (
    <div class={`group relative overflow-hidden p-6 rounded-lg bg-gradient-to-br from-base-200 to-base-300 ${hoverTints[index % 3]} transition-all duration-300 shadow-lg hover:shadow-xl hover:scale-105 border ${borderTints[index % 3]}`}>
      <h3 class={`text-xl font-semibold mb-3 bg-gradient-to-r ${headerPairs[index % 3]} bg-clip-text text-transparent`}>{item.title}</h3>
      <p class="text-base-content/80 leading-relaxed">{item.description}</p>
      <!-- Subtle glow effect on hover -->
      <div class={`absolute inset-0 rounded-lg bg-gradient-to-br ${headerPairs[index % 3]} opacity-0 group-hover:opacity-10 transition-opacity duration-300 pointer-events-none`}></div>
    </div>
  ))}
</div>
